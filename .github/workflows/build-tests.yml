name: CI BUILD - Windows & Linux (x64)

on: [push]

jobs:
###############################################################
################## Windows Debug (x64) build ##################
###############################################################
  windows-debug:
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

        # Install Clang 16
      - name: Install LLVM and Clang
        uses: KyleMayes/install-llvm-action@v1
        with:
          version: "16.0"

        # Add Clang to PATH
      - name: Add Clang to PATH
        run: |
          echo ${{ env.LLVM_PATH }} | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

        # Install latest verison of CMake
      - name: Install CMake
        uses: lukka/get-cmake@latest

        # Setup VCPKG repo and register it
      - name: Setup VCPKG
        uses: lukka/run-vcpkg@v11
        with:
          vcpkgGitCommitId: '${{ vars.VCPKG_COMMIT_ID }}'

        # Build and test in Debug
      - name: Build & Test in Debug
        uses: lukka/run-cmake@v10
        with:
          configurePreset: 'dev_clang_ninja'
          buildPreset: 'dev_clang_ninja_debug'
  
#################################################################
################## Windows Release (x64) build ##################
#################################################################
  windows-release:
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

        # Install latest verison of CMake
      - name: Install CMake
        uses: lukka/get-cmake@latest

        # Setup VCPKG repo and register it
      - name: Setup VCPKG
        uses: lukka/run-vcpkg@v11
        with:
          vcpkgGitCommitId: '${{ vars.VCPKG_COMMIT_ID }}'

        # Build and test in Release
      - name: Build & Test in Release
        uses: lukka/run-cmake@v10
        with:
          configurePreset: 'dev_vc143_ninja'
          buildPreset: 'dev_vc143_ninja_release'
  
#############################################################
################## Linux Debug (x64) build ##################
#############################################################
  linux-debug:
    runs-on: ubuntu-latest
    container:
      image: tracto/spark-linux-clang16:latest
      credentials:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Update / Restore Vcpkg binary cache
      - name: Restore Vcpkg cache
        id: cache-vcpkg
        uses: actions/cache@v3
        with:
          path: /vcpkg_cache
          key: linux-clang-vcpkg

        # Build and test in Debug
      - name: Build & Test in Debug
        uses: lukka/run-cmake@v10
        with:
          configurePreset: 'dev_clang_ninja'
          buildPreset: 'dev_clang_ninja_debug'

###############################################################
################## Linux Release (x64) build ##################
###############################################################
  linux-release:
    runs-on: ubuntu-latest
    container:
      image: tracto/spark-linux-gcc13:latest
      credentials:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Update / Restore Vcpkg binary cache
      - name: Restore Vcpkg cache
        id: cache-vcpkg
        uses: actions/cache@v3
        with:
          path: /vcpkg_cache
          key: linux-gcc-vcpkg

        # Build and test in Release
      - name: Build & Test in Release
        uses: lukka/run-cmake@v10
        with:
          configurePreset: 'dev_gcc_ninja'
          buildPreset: 'dev_gcc_ninja_release'
